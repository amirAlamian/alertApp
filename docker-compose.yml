version: "3.6"
services:
  elasticsearch:
    restart: always
    image: elasticsearch:7.9.1
    container_name: elasticsearch
    networks: ["stack"]
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: data
        target: /usr/share/elasticsearch/data
      - type: volume
        source: certs
        target: /usr/share/elasticsearch/config/certificates

    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: single-node
  kibana:
    restart: always
    image: kibana:7.9.1
    container_name: kibana

    environment:
      SERVERNAME: localhost
      ELASTICSEARCH_URL: https://elasticsearch:9200
      ELASTICSEARCH_HOSTS: https://elasticsearch:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: lwOPujlDqzMAZsYyxeJh
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: /usr/share/elasticsearch/config/certificates/ca/ca.crt
      SERVER_SSL_ENABLED: "true"
      SERVER_SSL_KEY: /usr/share/elasticsearch/config/certificates/kibana/kibana.key
      SERVER_SSL_CERTIFICATE: /usr/share/elasticsearch/config/certificates/kibana/kibana.crt
    ports: ["5601:5601"]
    networks: ["stack"]
    depends_on: ["elasticsearch"]
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
      - type: volume
        source: certs
        target: /usr/share/elasticsearch/config/certificates

  logstash:
    restart: always
    image: logstash:7.9.1
    container_name: logstash
    networks: ["stack"]
    depends_on: ["elasticsearch"]
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
  apm-server:
    restart: always
    image: docker.elastic.co/apm/apm-server:7.9.1
    container_name: apm_server
    ports:
      - "8200:8200"
      - "8201:8200"
    networks: ["stack"]
    command: --strict.perms=false -e # -e flag to log to stderr and disable syslog/file output
    environment:
      SERVERNAME: localhost
      ELASTICSEARCH_URL: https://elasticsearch:9200
      ELASTICSEARCH_HOSTS: https://elasticsearch:9200
      ELASTICSEARCH_USERNAME: apm_system
      ELASTICSEARCH_PASSWORD: aGKiw64UztqjHp9GiBqY
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: /usr/share/elasticsearch/config/certificates/ca/ca.crt
      SERVER_SSL_ENABLED: "true"
      SERVER_SSL_KEY: /usr/share/elasticsearch/config/certificates/apm-server/apm-server.key
      SERVER_SSL_CERTIFICATE: /usr/share/elasticsearch/config/certificates/apm-server/apm-server.crt
    depends_on: ["elasticsearch", "kibana"]
    volumes:
      - type: bind
        source: ./apm-server/config/apm-server.yml
        target: /usr/share/apm-server/apm-server.yml
        read_only: true
      - type: volume
        source: certs
        target: /usr/share/elasticsearch/config/certificates
  alert-sms:
    container_name: alert-sms
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./alert-sms:/app
    ports:
      - "8095:3000"
    networks: ["stack"] 
    environment:
      - "NODE_ENV=docker"
      - "jwt=123456"
      - "PORT=3000"
    depends_on:
      [
        "alert-app",
      ]
    command: [
        "sh",
        "-c",
        "ls
        && npm install
        && npm run dev",
      ]
    env_file:
      - .env
  alert-app:
    restart: always
    build:
      context: .
      dockerfile: ./alert-app/docker/node/Dockerfile
    volumes:
      - ./alert-app:/app
      - type: volume
        source: certs
        target: /usr/share/elasticsearch/config/certificates
    networks: ["stack"] 
    env_file:
      - .env
    environment:
      SERVER_SSL_ENABLED: "true"
    ports:
      - 3000:3000
    depends_on:
      - kibana
      - elasticsearch
networks: { stack: {} }
# use docker volume to persist ES data outside of a container.
volumes:
  data:
  certs:
